<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="shortcut icon" type="image/x-icon" href="/src/views/img2/hoteles.png">
    <title>TOKEN</title>
    <!-- Incluir la hoja de estilos de Bootstrap (utilizando CDN) -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>

<body>
    <style>
        body {
            background-image: url('/src/views/img2/fondo\ de\ pantalla\ gratis\ kawaii\ aesthetic\ rosa.png');
            /* Reemplaza 'tu-imagen-de-fondo.jpg' con la ruta de tu imagen */
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            height: 120vh;
            /* Ajusta la altura al 100% del viewport */
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgb(0, 0, 0);
            /* Cambia el color del texto según sea necesario para que sea visible en la imagen de fondo */
        }


        .card {
            max-width: 3000px;
            margin: 0px auto;
            padding: 0px;
            border-radius: 10px;
            background-color: #ffffff00;
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f8f8;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        .container {
            max-width: 1000px;
            padding: 10px;
            border-radius: 8px;
            background-color: #ffffff31;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h1 {
            color: rgb(124, 22, 4);
            font-size: 32px;
            font-weight: bold;
            /* Agregado para hacer el texto más grueso */
            margin-bottom: 8px;
            text-align: center;
            font-family: 'Comic Sans MS', cursive;
            /* Ejemplo de fuente de estilo de caricatura */
        }


        h4 {
            color: #333;
            font-size: 18px;
            margin-bottom: 12px;
            text-align: center;
            font-weight: bold;
            /* Agregado para hacer el texto más grueso */
            font-family: 'Comic Sans MS', cursive;
            /* Ejemplo de fuente de estilo de caricatura */

        }

        p {
            color: #555;
            font-size: 14px;
            line-height: 1.5;
            text-align: justify;
        }

        body {
            background-color: #f8f9fa;
        }

        .card {
            width: 400px;
            margin: 1px auto;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.584);
            transition: transform 0.3s ease-in-out;
        }

        .card:hover {
            transform: scale(1.03);
        }

        .card-header {
            background-color: rgb(124, 22, 4);
            color: #fff;
            padding: 10px;
            text-align: center;
            font-size: 1.5rem;
            font-weight: bold;
            /* Agregado para hacer el texto más grueso */
            font-family: 'Comic Sans MS', cursive;
            /* Ejemplo de fuente de estilo de caricatura */
            transition: background-color 0.3s ease;
        }

        .card-header:hover {
            background-color: rgb(168, 33, 10);
        }

        .card-body {
            padding: 10px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-size: 1rem;
            font-weight: bold;
            /* Agregado para hacer el texto más grueso */
            font-family: 'Comic Sans MS', cursive;
            /* Ejemplo de fuente de estilo de caricatura */
            color: rgb(124, 22, 4);
        }

        .form-control {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ced4da;
            border-radius: 4px;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .form-control:focus {
            border-color: rgb(124, 22, 4);
            box-shadow: 0 0 0 0.2rem rgb(168, 33, 10);
        }

        .btn-primary {
            background-color: rgb(124, 22, 4);
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-primary:hover {
            background-color: rgb(168, 33, 10);
        }
    </style>
    <div class="container mt-5">
        <h1>
            API Modelo de Hoteles
        </h1>
        <img class="col-2 offset-5 img-responsive" src="/src/views/img2/hoteles.png" alt="Descripción de la imagen">

        <h4>Únete a nosotros para desarrollar aplicaciones y aprovecha nuestros servicios especializados</h4>
        <p>
            Bienvenidos, la presente plataforma contiene la API desarrollada para el modelo de Hoteles. La API permite
            el acceso directo al trabajo con la información
            de nuestra base de datos desde tu aplicación. Usa una interfaz RESTful y retorna los datos en formato JSON.
            La información invocadas a través de la API
            proveen un acceso estándar online a datos contenidos en páginas HTML y otros archivos similares disponibles
            en Internet. Registre sus datos y consiga la
            autorización para trabajar en nuestra plataforma, ya que requiere de datos de autorización, la puedes
            solicitar a través del siguiente formulario:

        </p>

        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        Solicitud de Acceso a Datos
                    </div>
                    <div class="card-body">
                        <!-- Formulario de inicio de sesión -->
                        <form>
                            <div class="form-group">
                                <label for="nombre">Nombre:</label>
                                <input type="text" class="form-control" id="nombre" placeholder="Ingrese su Nombre"
                                    oninput="validarYConvertir(this)">
                            </div>
                            <div class="form-group">
                                <label for="apellido">Apellido:</label>
                                <input type="text" class="form-control" id="apellido" placeholder="Ingrese su Apellido"
                                    oninput="validarYConvertir(this)">
                            </div>
                            <div class="form-group">
                                <label for="correo">Correo:</label>
                                <input type="email" name="correo" class="form-control" id="correo"
                                    placeholder="Ingrese su correo" required>
                            </div>
                            <button type="button" class="btn btn-primary" onclick="generarToken()">GENERAR
                                TOKEN</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        //PARA HACER QUE SEA PURA MAYUSCULA Y SIN NUMEROS
        function validarYConvertir(input) {
            // Expresión regular que acepta solo letras y espacios
            var regex = /^[A-Za-z\s]+$/;

            if (!regex.test(input.value)) {
                // Si el valor no cumple con la expresión regular, elimina los caracteres no permitidos
                input.value = input.value.replace(/[^A-Za-z\s]+/, '');
            }

            // Convierte a mayúsculas
            input.value = input.value.toUpperCase();
        }
        function generarToken() {
            const usuario = "hector07nilas";  // Puedes cambiar esto dinámicamente si lo obtienes de algún lugar
            const contrasena = "12345";  // Puedes cambiar esto dinámicamente si lo obtienes de algún lugar
            const nombre = document.getElementById('nombre').value;
            const apellido = document.getElementById('apellido').value;
            const correo = document.getElementById('correo').value;

            // Primera solicitud para obtener el token
            axios.post('http://hoteles.spring.informaticapp.com:3093/empleados/authenticate', { usuario, contrasena })
                .then(tokenResponse => {
                    const token = tokenResponse.data;
                    console.log(token);
                    // Segunda solicitud a tu propia API con el token obtenido
                    const data = { nombre, apellido, correo, token };
                    axios.post('/obtenertoken', data)
                        .then(response => {
                            console.log(response.data);
                            Swal.fire({
                                icon: 'success',
                                title: 'Solicitud exitosa',
                                text: 'Su token a sido enviado, revise su correo.',
                                timer: 2000,
                                showConfirmButton: false
                            });

                            setTimeout(function () {
                                window.location.href = '/';
                            }, 2000);
                        })
                        .catch(error => {
                            console.error(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Hubo un problema al realizar la solicitud',
                                timer: 2000,
                                showConfirmButton: false
                            });
                        });
                })
                .catch(error => {
                    console.error('Error al obtener el token:', error);
                    alert('Error al obtener el token');
                });
        }

    </script>
    <!-- Incluir los scripts de Bootstrap (utilizando CDN) -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.0.9/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>

</html>